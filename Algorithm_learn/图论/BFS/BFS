BFS总结：
    一句话：BFS = 层序 + 队列，“一层一层扩，最短自然来”

    几大类型：
        1. 单源BFS
            压入队列，直接遍历， 基础BFS
                eg: 迷宫问题
        2. 多源BFS
            本质：初始 多个源点 同时入队，求 最晚被波及 的时间/距离
        3. 0~1边权问题
            边权只有 0 或 1，用 【双端队列】 保证“0 边先出”
                eg: 小明的游戏
        4. 双向 BFS
            从 起点 + 终点 同时扩展，首次相遇即最短 ， 前提是已知起点和终点
                eg:  8数码难题
    几大优化：
        1. 双向BFS
            如果已知起点和终点状态， 求两者之间的最短路径， 可以用双向BFS， 起点和终点同时开始搜索， 当两者的扩散相碰时结束。
                正常时间复杂度：
                    O( q^k ) 其中q为树的平均分支， k是树的高度
                双向BFS时间复杂度：
                    O( 2 * q^(k/2) ) 其中q为树的平均分支， k是树的高度
        2. 康托压缩
            针对总样本为阶乘，且个体为排列的数据时
                eg:
                    八数码&魔板
